import 'dart:math';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:grouped_list/grouped_list.dart';
import 'package:intl/intl.dart';

class ChatSystem extends StatefulWidget {
  const ChatSystem({Key? key}) : super(key: key);

  @override
  State<ChatSystem> createState() => _ChatSystemState();
}

class _ChatSystemState extends State<ChatSystem> {

List<Message> messages = [

  Message
    (text: 'Yes sure',
      date: DateTime.now(),
      isSentByMe: false,
  ),


].reversed.toList();

//what is tolist?


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Chat system with List'),
        centerTitle: true,
        backgroundColor: Colors.grey,
      ),
      body: Column(
        children: [
          Expanded(child: GroupedListView<Message, DateTime>(
            padding: const EdgeInsets.all(8),
            reverse: true,
            order: GroupedListOrder.DESC,
            useStickyGroupSeparators: true,
            floatingHeader: true,
            elements: messages,
            groupBy: (message) => DateTime(
              message.date.year,
              message.date.month,
              message.date.day,
            ),
            groupHeaderBuilder: (Message message) => SizedBox(
              height: 40,
                child: Center(
                  child: Card(
                    color: Theme.of(context).primaryColor,
                    child: Padding(
                      padding: const EdgeInsets.all(8),
                      child: Text(
                        DateFormat.yMMMd().format(message.date),
                        style: const TextStyle(color: Colors.white),
                      ),
                    ),
                  ),
                ),
            ),
            itemBuilder: (context, Message message) => Align(
              alignment: message.isSentByMe
              ? Alignment.centerRight: Alignment.centerLeft,

                child: Card(
              elevation: 8,
              child: Padding(
                padding: const EdgeInsets.all(12),
                child: Text(message.text),
              ),
                ),
            ),
          )),
          Container(
            color: Colors.tealAccent,
            child: TextField(
              decoration: const InputDecoration(
                contentPadding: EdgeInsets.all(12),
                hintText: 'Type your messge here',
              ),
              onSubmitted: (text){
                final message = Message(
                    text: text,
                    date: DateTime.now(),
                    isSentByMe: true,
                );
                setState(() => messages.add(message));

                // });
              },
            ),
          )
        ],
      ),
    );
  }



}

class Message {

  final String text;
  final DateTime date;
  final bool isSentByMe;


  const Message({
    required this.text,
    required this.date,
    required this.isSentByMe,
  });


}
